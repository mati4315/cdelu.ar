const axios = require('axios');

// Configuraci√≥n
const BASE_URL = 'http://localhost:3000/api/v1';
const ADMIN_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhZG1pbkBjZGVsdS5hciIsInJvbCI6ImFkbWluIiwiaWF0IjoxNzQ4NjA5ODE0fQ.Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8';

/**
 * Prueba completa del sistema de anuncios de loter√≠a
 */
async function testLotteryAdIntegration() {
    console.log('üß™ Iniciando pruebas de integraci√≥n del sistema de anuncios de loter√≠a...\n');
    
    try {
        // 1. Verificar que el worker est√° funcionando
        console.log('1Ô∏è‚É£ Verificando worker de anuncios de loter√≠a...');
        
        const { manageLotteryAd } = require('./create-lottery-ad.js');
        await manageLotteryAd();
        
        console.log('‚úÖ Worker ejecutado correctamente');
        
        // 2. Verificar loter√≠as activas
        console.log('\n2Ô∏è‚É£ Verificando loter√≠as activas...');
        
        const lotteriesResponse = await axios.get(`${BASE_URL}/lotteries?status=active`);
        
        if (lotteriesResponse.data.success) {
            const activeLotteries = lotteriesResponse.data.data.filter(l => 
                l.status === 'active' && l.current_status === 'running'
            );
            
            console.log(`üìä Loter√≠as activas encontradas: ${activeLotteries.length}`);
            
            if (activeLotteries.length > 0) {
                activeLotteries.forEach(lottery => {
                    console.log(`   - ${lottery.title} (ID: ${lottery.id})`);
                });
            }
        }
        
        // 3. Verificar anuncios creados
        console.log('\n3Ô∏è‚É£ Verificando anuncios de loter√≠a...');
        
        const adsResponse = await axios.get(`${BASE_URL}/ads?categoria=eventos`, {
            headers: { Authorization: `Bearer ${ADMIN_TOKEN}` }
        });
        
        if (adsResponse.data.success) {
            const lotteryAds = adsResponse.data.data.filter(ad => 
                ad.titulo.includes('üé∞') && ad.categoria === 'eventos'
            );
            
            console.log(`üìä Anuncios de loter√≠a encontrados: ${lotteryAds.length}`);
            
            if (lotteryAds.length > 0) {
                lotteryAds.forEach(ad => {
                    console.log(`   - ${ad.titulo} (ID: ${ad.id}, Activo: ${ad.activo})`);
                });
            }
        }
        
        console.log('\n‚úÖ Todas las pruebas completadas exitosamente');
        
    } catch (error) {
        console.error('‚ùå Error en las pruebas:', error.response?.data || error.message);
    }
}

// Ejecutar pruebas
async function runIntegrationTests() {
    console.log('üöÄ Iniciando pruebas de integraci√≥n...\n');
    await testLotteryAdIntegration();
    console.log('\n‚úÖ Pruebas completadas');
}

// Ejecutar si se llama directamente
if (require.main === module) {
    runIntegrationTests();
}

module.exports = {
    testLotteryAdIntegration
}; 