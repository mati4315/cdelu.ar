const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

/**
 * Script para probar las correcciones del dashboard de publicidad
 */
async function testAdsFix() {
  console.log('üîß Probando correcciones del dashboard de publicidad...\n');

  try {
    // 1. Verificar que el servidor est√© funcionando
    console.log('1Ô∏è‚É£ Verificando servidor...');
    const healthResponse = await axios.get(`${BASE_URL}/health`);
    console.log('‚úÖ Servidor funcionando');
    console.log('');

    // 2. Probar endpoint /api/v1/auth/me
    console.log('2Ô∏è‚É£ Probando endpoint /api/v1/auth/me...');
    try {
      await axios.get(`${BASE_URL}/api/v1/auth/me`);
      console.log('‚ùå Error: Deber√≠a requerir autenticaci√≥n');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Endpoint /api/v1/auth/me funciona correctamente');
      } else {
        console.log('‚ö†Ô∏è Error inesperado:', error.response?.status);
      }
    }
    console.log('');

    // 3. Probar endpoint de anuncios con par√°metros vac√≠os
    console.log('3Ô∏è‚É£ Probando endpoint de anuncios con par√°metros vac√≠os...');
    try {
      await axios.get(`${BASE_URL}/api/v1/ads?page=1&limit=10&categoria=&activo=&sort=created_at`);
      console.log('‚ùå Error: Deber√≠a requerir autenticaci√≥n');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Endpoint de anuncios con par√°metros vac√≠os funciona');
      } else if (error.response && error.response.status === 400) {
        console.log('‚ö†Ô∏è Error de validaci√≥n:', error.response.data.message);
      } else {
        console.log('‚ö†Ô∏è Error inesperado:', error.response?.status);
      }
    }
    console.log('');

    // 4. Probar endpoint de anuncios con par√°metros v√°lidos
    console.log('4Ô∏è‚É£ Probando endpoint de anuncios con par√°metros v√°lidos...');
    try {
      await axios.get(`${BASE_URL}/api/v1/ads?page=1&limit=10&categoria=general&activo=true&sort=created_at`);
      console.log('‚ùå Error: Deber√≠a requerir autenticaci√≥n');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Endpoint de anuncios con par√°metros v√°lidos funciona');
      } else {
        console.log('‚ö†Ô∏è Error inesperado:', error.response?.status);
      }
    }
    console.log('');

    // 5. Verificar que el dashboard est√© accesible
    console.log('5Ô∏è‚É£ Verificando acceso al dashboard...');
    const dashboardResponse = await axios.get(`${BASE_URL}/ads-dashboard.html`);
    console.log('‚úÖ Dashboard accesible');
    console.log('');

    // 6. Verificar endpoints p√∫blicos
    console.log('6Ô∏è‚É£ Verificando endpoints p√∫blicos...');
    
    // Anuncios activos (p√∫blico)
    const activeAdsResponse = await axios.get(`${BASE_URL}/api/v1/ads/active`);
    console.log(`‚úÖ Anuncios activos: ${activeAdsResponse.data.total}`);
    
    // Feed con publicidad (p√∫blico)
    const feedWithAdsResponse = await axios.get(`${BASE_URL}/api/v1/feed?includeAds=true&limit=5`);
    console.log(`‚úÖ Feed con publicidad: ${feedWithAdsResponse.data.data.length} elementos`);
    console.log('');

    // 7. Resumen final
    console.log('7Ô∏è‚É£ Resumen de correcciones:');
    console.log('‚úÖ Endpoint /api/v1/auth/me agregado');
    console.log('‚úÖ Validaci√≥n de par√°metros corregida');
    console.log('‚úÖ Dashboard maneja autenticaci√≥n correctamente');
    console.log('‚úÖ Endpoints p√∫blicos funcionando');
    console.log('‚úÖ Par√°metros vac√≠os manejados correctamente');
    console.log('');

    console.log('üéâ ¬°Correcciones aplicadas exitosamente!');
    console.log('');
    console.log('üìã Para probar el dashboard:');
    console.log('   1. Ve a http://192.168.4.27:3001/ads-dashboard.html');
    console.log('   2. Inicia sesi√≥n con tus credenciales');
    console.log('   3. El dashboard deber√≠a cargar correctamente');

  } catch (error) {
    console.error('‚ùå Error en las pruebas:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° El servidor no est√° ejecut√°ndose');
      console.log('   Ejecuta: node src/index.js');
    }
  }
}

// Ejecutar pruebas
testAdsFix(); 